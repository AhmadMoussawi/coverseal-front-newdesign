import {
  createLinkField,
  createLabelField,
  createFullWyziwygField,
} from "./utils/field";
import type { CollectionDescriptor } from "./types";

export const globalCollection: CollectionDescriptor = {
  isSingleton: true,
  description:
    "The global content of the website that can be found on all or at least multiple pages",
  fields: [
    {
      field: "youtube_link",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 40,
        hidden: false,
        readonly: false,
        note: "The link to the youtube page",
      },
    },
    {
      field: "facebook_link",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 41,
        hidden: false,
        readonly: false,
        note: "The link to the facebook page",
      },
    },
    {
      field: "linkedin_link",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 42,
        hidden: false,
        readonly: false,
        note: "The link to the linkedin page",
      },
    },
    {
      field: "instagram_link",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 43,
        hidden: false,
        readonly: false,
        note: "The link to the instagram page",
      },
    },
  ],
  translatedFields: [
    {
      field: "global_form_divider",
      type: null,
      meta: {
        sort: 1,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "Global form" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "Fields that can be found in multiple forms",
      },
    },
    createLabelField("full name", 2),
    createLabelField("mail", 3),
    createLabelField("phone", 4),
    {
      field: "submit_text",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 5,
        hidden: false,
        readonly: false,
        note: "The text of the submit button",
      },
    },
    {
      field: "price_request_form_divider",
      type: null,
      meta: {
        sort: 6,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "Price request form" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "The fields about the 'price request' form",
      },
    },
    {
      field: "price_request_title",
      type: "text",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 7,
        hidden: false,
        interface: "input-multiline",
        options: null,
        display: null,
        display_options: null,
        readonly: false,
        special: null,
        note: "The title of the 'price request' section",
      },
    },
    createLabelField("country", 8),
    createLabelField("demand", 9),
    createLabelField("catalog", 10),
    createLabelField("price request", 11),
    createLabelField("zip code", 12),
    {
      field: "after_sale_form_divider",
      type: null,
      meta: {
        sort: 13,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "After sale form" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "The fields about the 'after sale' form",
      },
    },
    createFullWyziwygField(
      "after_sale_sentence",
      14,
      "The sentence between the title and the form"
    ),
    {
      field: "after_sale_title",
      type: "text",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 15,
        hidden: false,
        interface: "input-multiline",
        options: null,
        display: null,
        display_options: null,
        readonly: false,
        special: null,
        note: "The title of the 'after sale' section",
      },
    },
    createLabelField("problem description", 16),
    createLabelField("message", 17),
    createLabelField("coverseal type", 18),
    createLabelField("add_photos", 19),
    // main menu
    {
      field: "main_menu_divider",
      type: null,
      meta: {
        sort: 20,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "Main menu" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "The fields about the main menu",
      },
    },
    createLinkField("the Coverseal main nav", 21),
    createLinkField("Benefits main nav", 22),
    createLinkField("Models main nav", 23),
    createLinkField("Achievements main nav", 24),
    createLinkField("About us main nav", 25),
    createLinkField("Contact main nav", 26),
    createLinkField("Jobs main nav", 27),
    createLinkField("partnerships main nav", 28),
    createLinkField("FAQ main nav", 29),
    createLinkField("After sale main nav", 30),
    // side menu
    {
      field: "side_menu_divider",
      type: null,
      meta: {
        sort: 31,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "Side menu" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "The fields about the side menu",
      },
    },
    createLinkField("Catalog side nav", 32),
    createLinkField("Price request side nav", 33),
    createLinkField("Configurator side nav", 34),
    createLinkField("After sale side nav", 35),
    // footer
    {
      field: "footer_divider",
      type: null,
      meta: {
        sort: 36,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "Footer" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "The fields about the footer",
      },
    },
    createLinkField("contact", 37),
    {
      field: "newsletter_text",
      type: "text",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 38,
        hidden: false,
        interface: "input-rich-text-html",
        options: {
          toolbar: [
            "bold",
            "italic",
            "removeformat",
            "bullist",
            "blockquote",
            "code",
            "fullscreen",
          ],
        },
        display: null,
        display_options: null,
        readonly: false,
        special: null,
        note: "The text encouraging to subscribe to the newsletter",
      },
    },
    createLinkField("newsletter_subscribe", 39),
    createLinkField("Privacy policy", 40),
    createLinkField("Terms and conditions", 41),
    // notifications
    {
      field: "notification_divider",
      type: null,
      meta: {
        sort: 44,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "Footer" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "The fields about the content display in notification",
      },
    },
    {
      field: "success_content",
      type: "text",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 45,
        hidden: false,
        interface: "input-multiline",
        options: null,
        display: null,
        display_options: null,
        readonly: false,
        special: null,
        note: "The content display in case of success notification",
      },
    },
    {
      field: "error_content",
      type: "text",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 46,
        hidden: false,
        interface: "input-multiline",
        options: null,
        display: null,
        display_options: null,
        readonly: false,
        special: null,
        note: "The content display in case of error notification",
      },
    },
    {
      field: "success_title",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 47,
        hidden: false,
        readonly: false,
        note: "Title of the success notification",
        interface: "input",
        options: { trim: true },
      },
    },
    {
      field: "error_title",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 48,
        hidden: false,
        readonly: false,
        note: "Title of the error notification",
        interface: "input",
        options: { trim: true },
      },
    },
    // form validation
    {
      field: "form_validation_divider",
      type: null,
      meta: {
        sort: 50,
        hidden: false,
        interface: "presentation-divider",
        options: { title: "Form validations" },
        readonly: false,
        special: ["alias", "no-data"],
        note: "The fields displaying if there is an error in the forms",
      },
    },
    {
      field: "wrong_email",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 51,
        hidden: false,
        readonly: false,
        note: "Text display in case of wrong email",
        interface: "input",
        options: { trim: true },
      },
    },
    {
      field: "wrong_phone",
      type: "string",
      schema: {
        is_nullable: false,
        is_unique: false,
        numeric_precision: null,
        numeric_scale: null,
      },
      meta: {
        sort: 51,
        hidden: false,
        readonly: false,
        note: "Text display in case of wrong phone number",
        interface: "input",
        options: { trim: true },
      },
    },
  ],
};
